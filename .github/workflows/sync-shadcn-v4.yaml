name: Sync shadcn/ui v4 for Monorepo with Tailwind CSS v4

permissions:
  contents: write
  pull-requests: write

on:
  schedule:
    - cron: "0 0 * * 1" # 매주 월요일 자정에 실행
  workflow_dispatch: # 수동 실행 가능
  push:
    branches:
      - main

jobs:
  sync:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'schedule' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'push' &&
       github.ref == 'refs/heads/main' &&
       (contains(github.event.head_commit.message, 'Merge pull request') &&
        contains(github.event.head_commit.message, 'sync/shadcn-v4')))

    steps:
      - name: Debug Event Information
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Commit message: ${{ github.event.head_commit.message }}"

      - name: Checkout current repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create and prepare sync branch
        run: |
          git checkout -b sync/shadcn-v4-monorepo || git checkout sync/shadcn-v4-monorepo
          git reset --hard origin/main
          echo "현재 브랜치: $(git branch --show-current)"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq rsync

      - name: Clone shadcn/ui v4
        run: git clone --depth=1 https://github.com/shadcn-ui/ui.git tmp-shadcn-ui

      - name: Debug Directory Structure
        run: |
          echo "========== Repository Structure =========="
          ls -la
          echo "========== packages/ui Structure =========="
          ls -la packages/ui/src || echo "packages/ui/src directory does not exist yet"

      - name: Create required directories
        run: |
          mkdir -p packages/ui/src/components
          mkdir -p packages/ui/src/lib
          mkdir -p packages/ui/src/hooks
          mkdir -p packages/ui/src/styles

      - name: Sync from monorepo template
        run: |
          echo "Syncing components from monorepo template..."
          rsync -av --delete tmp-shadcn-ui/templates/monorepo-next/packages/ui/src/components/ packages/ui/src/components/
          rsync -av --delete tmp-shadcn-ui/templates/monorepo-next/packages/ui/src/lib/ packages/ui/src/lib/
          rsync -av --delete tmp-shadcn-ui/templates/monorepo-next/packages/ui/src/hooks/ packages/ui/src/hooks/
          rsync -av --delete tmp-shadcn-ui/templates/monorepo-next/packages/ui/src/styles/ packages/ui/src/styles/

      - name: Sync additional v4 components
        run: |
          if [ -d tmp-shadcn-ui/apps/v4/components ]; then
            echo "Found additional v4 components, syncing..."
            mkdir -p tmp-components
            rsync -av tmp-shadcn-ui/apps/v4/components/ tmp-components/
            rsync -av --ignore-existing tmp-components/ packages/ui/src/components/
            rm -rf tmp-components
          else
            echo "No additional v4 components found."
          fi

      - name: Update components.json from template
        run: |
          if [ -f tmp-shadcn-ui/templates/monorepo-next/packages/ui/components.json ]; then
            echo "Updating components.json from template..."
            cp tmp-shadcn-ui/templates/monorepo-next/packages/ui/components.json packages/ui/
            jq '.tailwind.config = ""' packages/ui/components.json > packages/ui/components.json.tmp
            mv packages/ui/components.json.tmp packages/ui/components.json
            echo "Updated components.json content:"
            cat packages/ui/components.json
          fi

      - name: Update package.json dependencies
        run: |
          if [ -f tmp-shadcn-ui/templates/monorepo-next/packages/ui/package.json ]; then
            echo "Updating package.json dependencies..."
            SOURCE_DEPS=$(jq -c '.dependencies // {}' tmp-shadcn-ui/templates/monorepo-next/packages/ui/package.json)
            SOURCE_PEER_DEPS=$(jq -c '.peerDependencies // {}' tmp-shadcn-ui/templates/monorepo-next/packages/ui/package.json)
            jq --argjson srcDeps "$SOURCE_DEPS" --argjson srcPeerDeps "$SOURCE_PEER_DEPS" \
              '.dependencies += $srcDeps | .peerDependencies += $srcPeerDeps' \
              packages/ui/package.json > packages/ui/package.json.tmp
            mv packages/ui/package.json.tmp packages/ui/package.json
            echo "Updated package.json dependencies:"
            jq '.dependencies' packages/ui/package.json
          fi

      - name: Clean up temporary files
        run: rm -rf tmp-shadcn-ui

      - name: Check for changes
        id: check_changes
        run: |
          echo "Checking for changes..."
          git_status=$(git status --porcelain)
          echo "Git status output: $git_status"

          if [[ -n "$git_status" ]]; then
            echo "Changes detected, preparing commit..."
            echo "changes=true" >> $GITHUB_OUTPUT
            git add .
            git commit -m "chore: sync shadcn/ui v4 components for monorepo"
            git push -f origin sync/shadcn-v4-monorepo
            echo "Changes pushed to sync/shadcn-v4-monorepo branch"
          else
            echo "No changes detected."
            echo "changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.check_changes.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ github.token }}
          commit-message: "chore: sync shadcn/ui v4 components for monorepo"
          title: "chore: sync shadcn/ui v4 components for monorepo"
          body: |
            # shadcn/ui v4 컴포넌트 동기화

            이 PR은 shadcn/ui v4의 monorepo 템플릿에서 컴포넌트, 유틸리티, 훅, 스타일을 동기화합니다.

            ## 동기화된 항목
            - 컴포넌트 (`/src/components/`)
            - 유틸리티 (`/src/lib/`)
            - 훅 (`/src/hooks/`)
            - 스타일 (`/src/styles/`)
            - 의존성 (`package.json`)
            - 설정 (`components.json`)

            ## Tailwind CSS v4 호환성

            이 PR은 Tailwind CSS v4와 호환되도록 업데이트되었습니다.

            변경사항을 검토하고 필요한 경우 수정 후 머지해주세요.
          branch: "sync/shadcn-v4-monorepo"
          base: "main"
          labels: "dependencies,ui,shadcn"

      - name: PR Result
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          echo "Pull Request 생성됨: sync/shadcn-v4-monorepo → main"
